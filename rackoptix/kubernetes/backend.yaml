---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rackoptix-backend
  namespace: rackoptix
  labels:
    app: rackoptix
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rackoptix
      component: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: rackoptix
        component: backend
    spec:
      containers:
      - name: backend
        image: ${REGISTRY}/rackoptix-backend:${TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: rackoptix-secrets
              key: DATABASE_URL
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: rackoptix-config
              key: BACKEND_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: rackoptix-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      initContainers:
      - name: wait-for-db
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z rackoptix-db 5432; do echo waiting for db; sleep 2; done;']

---
apiVersion: v1
kind: Service
metadata:
  name: rackoptix-backend
  namespace: rackoptix
  labels:
    app: rackoptix
    component: backend
spec:
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  selector:
    app: rackoptix
    component: backend

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rackoptix-backend-hpa
  namespace: rackoptix
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rackoptix-backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 4
        periodSeconds: 60
      selectPolicy: Max