---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rackoptix-frontend
  namespace: rackoptix
  labels:
    app: rackoptix
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rackoptix
      component: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: rackoptix
        component: frontend
    spec:
      containers:
      - name: frontend
        image: ${REGISTRY}/rackoptix-frontend:${TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      initContainers:
      - name: wait-for-api
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z rackoptix-api 3000; do echo waiting for api; sleep 2; done;']

---
apiVersion: v1
kind: Service
metadata:
  name: rackoptix-frontend
  namespace: rackoptix
  labels:
    app: rackoptix
    component: frontend
spec:
  ports:
  - port: 80
    targetPort: 80
    name: http
  selector:
    app: rackoptix
    component: frontend

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rackoptix-ingress
  namespace: rackoptix
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - rackoptix.example.com
    secretName: rackoptix-tls
  rules:
  - host: rackoptix.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: rackoptix-api
            port:
              number: 3000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rackoptix-frontend
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rackoptix-frontend-hpa
  namespace: rackoptix
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rackoptix-frontend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 4
        periodSeconds: 60
      selectPolicy: Max